syntax = "proto3";

option go_package = "videoOperatorPb";

package videoOperatorPb;

message VideoUploadReq {
  string token = 1;
  bytes data = 2;
  string title = 3;
}

message VideoUploadResp {
  int32 status = 1;
  string status_msg = 2;
}

message FeedReq {
  int64 latest_time = 1; // 可选参数，限制返回视频的最新投稿时间戳，精确到秒，不填表示当前时间
  string token = 2; // 可选参数，登录用户设置
}

message FeedResp {
  int32 status_code = 1; // 状态码，0-成功，其他值-失败
  string status_msg = 2; // 返回状态描述
  repeated Video video_list = 3; // 视频列表
  int64 next_time = 4; // 本次返回的视频中，发布最早的时间，作为下次请求时的latest_time
}

message Video {
  uint64 id = 1; // 视频唯一标识
  User author = 2; // 视频作者信息
  string play_url = 3; // 视频播放地址
  string cover_url = 4; // 视频封面地址
  int64 favorite_count = 5; // 视频的点赞总数
  int64 comment_count = 6; // 视频的评论总数
  bool is_favorite = 7; // true-已点赞，false-未点赞
  string title = 8; // 视频标题
}

message User {
  uint64 id = 1; // 用户id
  string name = 2; // 用户名称
  int64 follow_count = 3; // 关注总数
  int64 follower_count = 4; // 粉丝总数
  bool is_follow = 5; // true-已关注，false-未关注
}

message PublishListReq{
  string token = 1;//用户鉴权token
  string user_id = 2;//用户id
}

message PublishListResp{
  int32 status_code = 1;//状态码，0-成功，其他值-失败
  string status_msg = 2;//返回状态描述
  repeated Video video_list = 3;//视频列表
}

message VideoListReq{
  repeated uint64 video_id = 1;//用户id
}

message VideoListResp{
  int32 status_code = 1;//状态码，0-成功，其他值-失败
  string status_msg = 2;//返回状态描述
  repeated Video video_list = 3;//视频列表
}

service VideoOperator {
  rpc Upload(VideoUploadReq) returns (VideoUploadResp);
  rpc Feed(FeedReq) returns (FeedResp);
  rpc PublishList(PublishListReq) returns (PublishListResp);
  rpc VideoList(VideoListReq) returns (VideoListResp);//查询video_id列表
}

