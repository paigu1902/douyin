// Code generated by hertz generator.

package UserCommPb

import (
	"context"
	"github.com/cloudwego/hertz/pkg/app"
	"paigu1902/douyin/service/api-gateway/biz/rpcClient"
	"paigu1902/douyin/service/rpc-user-operator/rpc-user-comment/kitex_gen/UserCommPb"
	"strconv"
)

func CommentActionMethod(ctx context.Context, c *app.RequestContext) {
	UserId, Exist1 := c.GetQuery("user_id")
	CommentId, Exist2 := c.GetQuery("comment_id")
	VideoId, Exist3 := c.GetQuery("video_id")
	ActionType, Exist4 := c.GetQuery("action_type")
	CommentText, Exist5 := c.GetQuery("comment_text")

	// 特判Exist2 因为 当发布评论时没有CommentId
	if !(((!Exist2 && ActionType == "1") || Exist2) && Exist1 && Exist3 && Exist4 && Exist5) {
		c.String(400, "获取参数失败")
		return
	}
	if !Exist2 {
		CommentId = "0"
	}
	userid, _ := strconv.Atoi(UserId)
	commentid, _ := strconv.Atoi(CommentId)
	videoid, _ := strconv.Atoi(VideoId)
	actiontype, _ := strconv.Atoi(ActionType)
	resp, err := rpcClient.UserComm.CommentAction(ctx, &UserCommPb.DouyinCommentActionRequest{
		UserId:      int64(userid),
		VideoId:     int64(videoid),
		ActionType:  int32(actiontype),
		CommentText: CommentText,
		CommentId:   int64(commentid),
	})
	if err != nil {
		c.String(400, err.Error())
		return
	}
	c.JSON(200, &resp)
	return
}

func CommentGetListMethod(ctx context.Context, c *app.RequestContext) {
	UserId, Exist1 := c.GetQuery("user_id")
	VideoId, Exist2 := c.GetQuery("video_id")
	if !(Exist1 && Exist2) {
		c.String(400, "获取参数失败")
		return
	}
	userid, _ := strconv.Atoi(UserId)
	videoid, _ := strconv.Atoi(VideoId)

	resp, err := rpcClient.UserComm.GetCommentsByVideo(ctx, &UserCommPb.DouyinCommentListRequest{
		UserId:  int64(userid),
		VideoId: int64(videoid),
	})
	if err != nil {
		c.String(400, err.Error())
		return
	}
	c.JSON(200, &resp)
	return
}
