// Code generated by Kitex v0.4.4. DO NOT EDIT.

package userfavorpc

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	callopt "github.com/cloudwego/kitex/client/callopt"
	userFavoPb "paigu1902/douyin/service/rpc-user-operator/rpc-user-favo/kitex_gen/userFavoPb"
)

// Client is designed to provide IDL-compatible methods with call-option parameter for kitex framework.
type Client interface {
	FavoAction(ctx context.Context, Req *userFavoPb.FavoActionReq, callOptions ...callopt.Option) (r *userFavoPb.FavoActionResp, err error)
	FavoList(ctx context.Context, Req *userFavoPb.FavoListReq, callOptions ...callopt.Option) (r *userFavoPb.FavoListResp, err error)
}

// NewClient creates a client for the service defined in IDL.
func NewClient(destService string, opts ...client.Option) (Client, error) {
	var options []client.Option
	options = append(options, client.WithDestService(destService))

	options = append(options, opts...)

	kc, err := client.NewClient(serviceInfo(), options...)
	if err != nil {
		return nil, err
	}
	return &kUserFavoRpcClient{
		kClient: newServiceClient(kc),
	}, nil
}

// MustNewClient creates a client for the service defined in IDL. It panics if any error occurs.
func MustNewClient(destService string, opts ...client.Option) Client {
	kc, err := NewClient(destService, opts...)
	if err != nil {
		panic(err)
	}
	return kc
}

type kUserFavoRpcClient struct {
	*kClient
}

func (p *kUserFavoRpcClient) FavoAction(ctx context.Context, Req *userFavoPb.FavoActionReq, callOptions ...callopt.Option) (r *userFavoPb.FavoActionResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.FavoAction(ctx, Req)
}

func (p *kUserFavoRpcClient) FavoList(ctx context.Context, Req *userFavoPb.FavoListReq, callOptions ...callopt.Option) (r *userFavoPb.FavoListResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.FavoList(ctx, Req)
}
