syntax = "proto3";

option go_package = "userInfoPb";

package userInfoPb;

// ------------------------------------
// Messages
// ------------------------------------
message RegisterReq {
  string userName = 1; //name
  string password = 2; //password
}
message RegisterResp {
  int32 status_code = 1; //状态码，0-成功，其他值-失败
  string status_msg = 2; //返回状态描述
  uint64 user_id = 3; //userId
  string token = 4; //token
}

message LoginReq {
  string userName = 1; //userName
  string password = 2; //password
}

message LoginResp {
  int32 status_code = 1; //状态码，0-成功，其他值-失败
  string status_msg = 2; //返回状态描述
  uint64   user_id = 3;
  string token = 4; //token
}

message User {
  uint64 userId = 1; // 用户id
  string userName = 2; // 用户名称
  int64 follow_count = 3; // 关注总数
  int64 follower_count = 4; // 粉丝总数
  bool is_follow = 5; // true-已关注，false-未关注
  string avatar = 6; //用户头像
  string background_image = 7; //用户个人页顶部大图
  string signature = 8; //个人简介
  int64 total_favorited = 9; //获赞数量
  int64 work_count = 10; //作品数量
  int64 favorite_count = 11; //点赞数量
}

message UserInfoReq {
  uint64 fromId = 1; //userId
  uint64 toId = 2; //token
}

message UserInfoResp {
  int32 status_code = 1; //状态码，0-成功，其他值-失败
  string status_msg = 2; //返回状态描述
  User user = 3;
}

message actionDBReq {
  int32 type = 1; // 操作类型，0-关注，1-取关
  uint64 fromId = 2; //需要关注的用户id
  uint64 toId = 3; //被关注的用户id
}

message actionDBResp {
  int32 status_code = 1; //状态码，0-成功，其他值-失败
  string status_msg = 2; //返回状态描述
}

message BatchUserReq {
  repeated uint64 batchids = 1; //批量id切片
  uint64 fromid = 2; //请求id
}

message BtachUserResp{
  int32 status_code = 1; //状态码，0-成功，其他值-失败
  string status_msg = 2; //返回状态描述
  repeated User batchusers = 3; //批量用户信息
}
service UserInfo {
  //-----------------------user-----------------------
  rpc Register(RegisterReq) returns (RegisterResp);
  rpc Login(LoginReq) returns (LoginResp);
  rpc Info(UserInfoReq) returns (UserInfoResp);
  rpc ActionDB(actionDBReq) returns (actionDBResp);
  rpc BatchInfo(BatchUserReq) returns (BtachUserResp);
}
