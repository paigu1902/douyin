syntax = "proto3";

option go_package = "./userInfoPb";

package userInfoPb;

// ------------------------------------
// Messages
// ------------------------------------
message RegisterReq {
  string userName = 1; //name
  string password = 2; //password
}
message RegisterResp {
  int32 status_code = 1; //状态码，0-成功，其他值-失败
  string status_msg = 2; //返回状态描述
  uint64 user_id = 3; //userId
  string token = 4; //token
}

message LoginReq {
  string userName = 1; //userName
  string password = 2; //password
}

message LoginResp {
  int32 status_code = 1; //状态码，0-成功，其他值-失败
  string status_msg = 2; //返回状态描述
  uint64   user_id = 3;
  string token = 4; //token
}

message User {
  uint64 userId = 1; //userId
  string userName = 2; //name
  string followCount = 3; //followCount
  string followerCount = 4; //followerCount
  string isFollow = 5;
}

message UserInfoReq {
  uint64 userId = 1; //userId
  string token = 2; //token
}

message UserInfoResp {
  int32 status_code = 1; //状态码，0-成功，其他值-失败
  string status_msg = 2; //返回状态描述
  User user = 3;
}

//message AuthsInfoReq {
//  repeated int64 authIds = 1; //authIds
//  optional int64 curUserId = 2; //curUserId
//}
//
//message AuthsInfoResp {
//  map<int64, User> auths = 1; //auths
//}

service UserInfo{
  //-----------------------user-----------------------
  rpc Register(RegisterReq) returns (RegisterResp);
  rpc Login(LoginReq) returns (LoginResp);
  rpc Info(UserInfoReq) returns (UserInfoResp);
  //  rpc AuthsInfo(AuthsInfoReq) returns (AuthsInfoResp);
}
